\dt *.*
create schema tp1_l3show search_pathshot search_path;
\dt *.*;
create schema tp1_l3;
clear
\! clear
\dt *
show search_path;
show search_path;
create schema tp1show search_path;
create schema tp1;
show search-path;
show search_path;
show search_path;\d publi 
show search_path;\d public
\d public;
set search-path to tp1, public;
set search_path to tp1, public;
show search_path;
CREATE TABLE Departement(DID varchar(2) PRIMARY KEY, Libelle varchar(20));
\d Departement
CREATE TABLE Employe(--EID integer CHECK (EID>9 and EID < 100) EID primary key integer, Nom varchar(20), Dept varchar(2), CONSTRAINT employe_departement_fkey (Dept) REFERENCES Departement(did)););
\d employe
\d Employe
\d ads
DROP TABLE employe ;
\d Employe
CREATE TABLE Employe(--EID integer CHECK (EID>9 and EID < 100) EID primary key integer, Nom varchar(20), Dept varchar(2), CONSTRAINT employe_departement_fkey (Dept) REFERENCES Departement(did));;);
CREATE TABLE Employe(--EID integer CHECK (EID>9 and EID < 100) EID primary key integer, Nom varchar(20), Dept varchar(2), CONSTRAINT employe_departement_fkey FOREIGN KEY (Dept) REFERENCES Departement(did));;);
CREATE TABLE Employe(--EID integer CHECK (EID>9 and EID < 100) EID primary key integer, Nom varchar(20), Dept varchar(2), CONSTRAINT employe_departement_fkey FOREIGN KEY (Dept) REFERENCES Departement(did)));;););
CREATE TABLE Employe(--EID integer CHECK (EID>9 and EID < 100) EID primary key integer, Nom varchar(20), Dept varchar(2), CONSTRAINT employe_departement_fkey FOREIGN KEY (Dept) REFERENCES Departement(did)););
\d employe 
DROP TABLE employe;
CREATE TABLE Employe (    EID primary key integer CHECK (eid > 9 and eid < 100),    Nom varchar(20),    Dept varchar(2),     CONSTRAINT employe_departement_fkey FOREIGN KEY (Dept) REFERENCES Departement(did));
CREATE TABLE Employe (    EID integer primary key CHECK (eid > 9 and eid < 100),    Nom varchar(20),    Dept varchar(2),     CONSTRAINT employe_departement_fkey FOREIGN KEY (Dept) REFERENCES Departement(did));
\Employe 
\d employe
\d departement
INSERT INTO departement VALUES ("mt", math);
INSERT INTO departement VALUES (mt, math);
INSERT INTO departement VALUES ('mt', 'math');
\departement
\d departement
show table departement ;
\dt departement
SELECT * FROM departement;
rollbackSELECT * FROM departement;
rollback;
delete from departement where did = 'mt';
select * from departement;
begin transactionINSERT INTO departement VALUES ('mt', 'math');
begin transaction; INSERT INTO departement VALUES ('mt', 'math');
select * from departement ;
rollbackselect * from departement;
;
;
select * from departement;
end transaction;
select * from departement;
select version();
select * from departement;
begin transaction;
INSERT INTO departement VALUES ('mt', 'math');
commit;
rollback;
begint transaction;
begin transaction;
insert into department values ('51', 'algo graph');
insert into departement values ('51', 'algo graph');
rollback;
select * from departement ;
begin transaction;
insert into departement values ('51', 'algo graph');
\dt employe
set search_path to tp1, public;
select * from departement;
select * from departement;
select * from departement;
select * from departement;
insert into departement values ('C2', 'math');
select * from departement ;
begin transaction;
insert into departement values ('c4', 'algo');
select * from departement ;
commit;
select * from departement ;
begin transaction;
insert into departement values ('c6', 'poo');
select * from departement ;
set search_path to tp1, public;
select * from departement ;
begin transaction;
update departement set libelle='Biologie' where did='C1';
select * from departement ;
rollback;
begin transaction;
update departement set libelle='Biologie' where did='C1';
select * from departement ;
commit;
set search-path to tp1, public;
set search_path to tp1, public;
\dt employe 
select * employe;
select * from employe;
begin transaction;
insert into departement values ('51', 'algo graph');
commit;
begin transaction;
truncate table departement;
select * from departement;
rollbackbegin transaction;
rollback;
begin transaction;
truncate table departement CASCADE;
select * from departement;
rollback;
begin transaction;
select * from departement;
truncate table departement CASCADE;
commit;
insert into departement values ('C1', 'Info');
insert into employe values (01, "Quentin", 'C1');
rollback;
insert into employe values (01, "Quentin", 'C1');
insert into employe values (01, 'Quentin', 'C1');
insert into employe values (10, 'Quentin', 'C1');
select * from employe;
insert into departement values ('C1', 'Informatique');
insert into employe values (12, 'Gregoire', 'C2');
select * from departement;
delete from C1 where did = 'C1';
delete from departement  where did = 'C1';
\d employe
alter table employe drop employe_departement_fkey;
alter table employe drop constraint employe_departement_fkey;
ls;
select * from employe ;
select * from departement;
select * from employe;
truncate table departement;
truncate table employe;
ALTER TABLE employe ADD CONSTRAINT employe_departement_fkey FOREIGN KEY (dept) REFERENCES departement(did);
\d departement
alter table employe drop constraint employe_departement_fkey;
\d departement
\d employe
ALTER TABLE employe ADD CONSTRAINT employe_departement_fkey FOREIGN KEY (dept) REFERENCES departement(did);
insert into departement values ('C1', 'Info');
insert into employe values (10, 'Quentin', 'C1');
\d employe


\d employe
select * from employe select * from departement;
select * from employe; select * from departement;
truncate table employe;
truncate table departement;
truncate table departement cascade;
select * from departement ;
select * from cascade ;
select * from employe;
insert into departement values ('C1', 'Info');
insert into employe values (10, 'Quentin', 'C1');
\d employe
delete from departement  where did = 'C1';
select * from departement ;
select * from employe ;
insert into departement values ('C1', 'Info');
insert into employe values (10, 'Quentin', 'C1');
alter table employe drop constraint employe_departement_fkey;
\d employe
\d employe
\d employe
ALTER TABLE employe ADD CONSTRAINT employe_departement_fkey FOREIGN KEY (dept) REFERENCES departement(did) DEFERRABLE;
select * from employe ;
select * from departement;
delete from employe where eid=10;
select * from departement;
select * from employe;
\d employe
set constraints employe_departement_fkey deferred;
begin transaction;
set constraints employe_departement_fkey deferred;
delete from employe where eid=10;
delete from departement where did='C1';
commit;
select * from departement ;
select * from employe;
\d employe
\d departement
select * from departement ;
select * from employe ;
select * from departement;
insert into employe ("C1", "info", "informatique");
insert into employe values ("C1", "info", "informatique");
insert into employe values ('C1', 'info', 'informatique');
insert into employe values ('C1', 'info', 'informatique');
\d employe
\d departement
insert into departement values ('C1', 'informatique');
insert into department values ('C2', 'math');
insert into departement values ('C2', 'math');
select * from departement;
delete from departement where did='C2';
select * from departement;
begin transaction;
insert into departement values ('C3', 'bio');
select * from departement;
commit;
select * from departement ;
begin transaction;
insert into departement values ('c6', 'poo');
rollback;
truncate table departement;
truncate table departement cascade;
insert into departement values ('C1', 'Info');
select * from departement ;
update departement set libelle = 'Informatique';
select * from departement ;
update departement set libelle = 'Informatique' where did='C1';
select * from departement ;
begin transaction;
update departement set libelle = 'Info' where did='C1';
uis la session 1 commencez une transaction. modifiez le libellé de ce département en ‘Info’ sans validez encore ; faites la même chose dans la session 2, mais pour modifier ce 
;
rollback;
begin transaction;
update departement set libelle = 'Info' where did='C1';
commit;
select * from departement ;
select * from departement ;
truncate table departement cascade;
select * from departement ;
select * from employe ;
insert into departement values ('C1', 'Info');
insert into employe values (10, "henri", "C1");
\d employe
insert into employe values (10, 'henri', 'C1');
select * from departement ;
delete from departement where did='C1';
